name: Fetch VM Skins and Merge Data

on:
  schedule:
    # Run every Thursday at 8:00 PM EST (UTC-5)
    # In cron syntax: minute hour day-of-month month day-of-week
    - cron: '0 1 * * 5'  # 01:00 UTC Friday = 20:00 EST Thursday
  workflow_dispatch:  # Allow manual triggering
    inputs:
      vm_api_endpoint:
        description: 'VM API endpoint URL'
        required: true
        type: string

jobs:
  fetch-and-merge:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Fetch VM skins data
        run: |
          # Get current date for filename
          CURRENT_DATE=$(date +%Y-%m-%d)
          echo "CURRENT_DATE=$CURRENT_DATE" >> $GITHUB_ENV
          
          # Fetch data from VM API endpoint
          if [ -n "${{ github.event.inputs.vm_api_endpoint }}" ]; then
            VM_ENDPOINT="${{ github.event.inputs.vm_api_endpoint }}"
          else
            VM_ENDPOINT="${{ secrets.VM_API_ENDPOINT }}"
          fi
          
          echo "Fetching data from VM endpoint..."
          curl -f -o "data/exporter_skins-$CURRENT_DATE.json" "$VM_ENDPOINT"
          
          if [ $? -eq 0 ]; then
            echo "Successfully fetched VM data"
          else
            echo "Failed to fetch VM data"
            exit 1
          fi
        
      - name: Run merge script
        run: |
          # Update merge script to use current date file
          python scripts/merge_skins.py --date ${{ env.CURRENT_DATE }}
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/exporter_skins-${{ env.CURRENT_DATE }}.json
          git add data/merged_skins.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update VM skins and merged data [${{ env.CURRENT_DATE }}] [skip ci]"
            git push
          fi 